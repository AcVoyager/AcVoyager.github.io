<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>6.2 leetcode check-in</title>
    <url>/2020/06/02/6-2-leetcode-check-in/</url>
    <content><![CDATA[<p>今日leetcode打卡：dc, lc79, lc103(one-shot), lc121(one-shot)</p>
<p><a href="https://leetcode.com/problems/word-search/" target="_blank" rel="noopener">lc79</a>: </p>
<ol>
<li>backtrack可用递归试的dfs加visited数组标记得以实现。</li>
<li>复杂度注意一下，$O(N*4^L)$, N is the number of cells in the board, L is the length of the word to be matched and “4” is because there are four directions.</li>
</ol>
<p><a href="https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/" target="_blank" rel="noopener">lc103</a>:</p>
<p>思路：BFS+手动赋rank</p>
<ol>
<li>Java如何reverse一个arraylist？<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Collections.reverse(myarraylist);</span><br></pre></td></tr></table></figure>


</li>
</ol>
<ol start="2">
<li>Queue的操作<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Queue&lt;E&gt; q = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">q.offer(); <span class="comment">// add</span></span><br><span class="line">q.poll(); <span class="comment">// remove</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <categories>
        <category>中文</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>6.10 leetcode check-in</title>
    <url>/2020/06/10/6-10-leetcode-check-in/</url>
    <content><![CDATA[<p>今日leetcode打卡：daily challenge(one-shot)</p>
<p>今天的daily challenge就是标准的二分查找。</p>
]]></content>
      <categories>
        <category>中文</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>6.4 leetcode check-in</title>
    <url>/2020/06/04/6-4-leetcode-check-in/</url>
    <content><![CDATA[<p>今天是6月4日。昨天6.3办了一天手续，只做了dc。</p>
<p>今日leetcode打卡：dc(one-shot), lc692(one-shot), lc127(<em>reserved</em>), lc138(one-shot), </p>
<p><a href="https://leetcode.com/problems/top-k-frequent-words/" target="_blank" rel="noopener">lc692</a>:</p>
<p>学到了comparator的用法。具体可参加<a href="https://github.com/AcVoyager/MyLeetCode/blob/dc43489cd64748b96a1a7ebbf7ce49606effcc7a/problems/Amazon/692.%20Top%20K%20Frequent%20Words/code.java#L9-L20" target="_blank" rel="noopener">本人代码</a>。</p>
<p><a href="https://leetcode.com/problems/word-ladder/" target="_blank" rel="noopener">lc127</a></p>
<p>说是medium，其实有点hard…有空的话此题要复习一下</p>
<p><a href="https://leetcode.com/problems/copy-list-with-random-pointer/" target="_blank" rel="noopener">lc138</a></p>
<p>Hashmap解决所有问题</p>
<p>今天突然又想起了杭州。出国在外，一人生活久了，渐渐地也就没有什么留恋的人和事儿了。唯一一个，一直一直放不下的，是那座承载童年梦想和四年青春的杭城。</p>
<p><img src="hz.jpeg" alt=""><br><em>摄于2020年1月5日中午，苏堤，杭州</em></p>
]]></content>
      <categories>
        <category>中文</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>6.5 leetcode check-in</title>
    <url>/2020/06/05/6-5-leetcode-check-in/</url>
    <content><![CDATA[<p>今日leetcode打卡：daily challenge</p>
]]></content>
      <categories>
        <category>中文</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>6.9 leetcode check-in</title>
    <url>/2020/06/09/6-9-leetcode-check-in/</url>
    <content><![CDATA[<p>今日leetcode打卡：daily challenge(one-shot)</p>
<p>这道题本身不难，不过follow up有点意思，值得一看。</p>
<p>follow-up的一个解释贴在<a href="https://leetcode.com/explore/challenge/card/june-leetcoding-challenge/540/week-2-june-8th-june-14th/3355/discuss/87268/Java-code-for-the-follow-up-question" target="_blank" rel="noopener">这里</a>，使用的是hashmap和二分查找。</p>
]]></content>
      <categories>
        <category>中文</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>6.7 leetcode check-in</title>
    <url>/2020/06/07/6-7-leetcode-check-in/</url>
    <content><![CDATA[<p>今日leetcode打卡：</p>
<p>dc: lc518. Coin Change 2</p>
<p>这道题很经典，我记得我大一下学“C大程”时的第一个project就是这个题。当时用C语言写的，在图书馆干了快一下午硬是没想出自己的答案，不得已上网需求CSDN等大佬的帮助。如今倒是不到一个小时几乎一遍过了（第二次ac，第一次没ac是因为edge case，amount为0时应该算一种），也算是有所进步吧，，，什么时候能15分钟内写出来就牛逼了。</p>
<p>不过我的算法看起来效率不太高，我用的是递归，结果如下：</p>
<p>Runtime: 950 ms, faster than 5.04% of Java online submissions for Coin Change 2.</p>
<p>Memory Usage: 57.8 MB, less than 5.03% of Java online submissions for Coin Change 2.</p>
<p>我已经用字典存取访问过的路径来加速了，还是不够快。</p>
<p>leetcode上给出的<a href="https://leetcode.com/problems/coin-change-2/solution/" target="_blank" rel="noopener">solution</a>是用dp来做的，结果确实快，faster than 100%, space lesser than 86%.</p>
<p>这个算法是用dp，将coin作为外循环，amount从0到目标作为外循环。确实很厉害，我也没想到。还需加油。</p>
]]></content>
      <categories>
        <category>中文</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>AWS学习笔记-Auto Scaling and Load Balancing</title>
    <url>/2020/10/16/AWS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-Auto-Scaling-and-Load-Balancing/</url>
    <content><![CDATA[<p>欢迎来到我的AWS学习笔记系列。</p>
<p>本文着重记述关于AWS<strong>弹性伸缩</strong>和<strong>负载均衡</strong>的知识点。如若转载，请先与作者联系。</p>
<p><em>本文图片来自于网络</em></p>
<h1 id="AWS-Auto-Scaling-and-Load-Balancing"><a href="#AWS-Auto-Scaling-and-Load-Balancing" class="headerlink" title="AWS Auto Scaling and Load Balancing"></a>AWS Auto Scaling and Load Balancing</h1><a id="more"></a>

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在笔者学习AWS相关知识的过程中，scaling和load balance作为两个关键词经常出现。这并非是巧合，作为云服务提供商，弹性伸缩和负载均衡是两大重点功能，这关系到互联网公司的服务质量等。</p>
<p>闲话少说，今天就来figure it out。</p>
<h2 id="Elastic-Load-Balancing"><a href="#Elastic-Load-Balancing" class="headerlink" title="Elastic Load Balancing"></a>Elastic Load Balancing</h2><h3 id="Context"><a href="#Context" class="headerlink" title="Context"></a>Context</h3><p>Modern high-traffic websites must serve hundreds of thousands—if not millions—of concurrent requests from users or clients, and then return the correct text, images, video, or application data in a fast and reliable manner. Additional servers are generally required to meet these high volumes.</p>
<h3 id="Definition"><a href="#Definition" class="headerlink" title="Definition"></a>Definition</h3><p>Elastic Load Balancing is an AWS service that <strong>distributes incoming application or network traffic across multiple targets</strong>—such as Amazon Elastic Compute Cloud (Amazon EC2) instances, containers, internet protocol (IP) addresses, and Lambda functions—<strong>in a single Availability Zone or across multiple Availability Zones</strong>. Elastic Load Balancing scales your load balancer as traffic to your application changes over time. It can automatically scale to most workloads. </p>
<p>Note: It could distribute the network across multiple availability zones.</p>
<h3 id="Types-of-Load-Balancer"><a href="#Types-of-Load-Balancer" class="headerlink" title="Types of Load Balancer"></a><a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/load-balancer-types.html" target="_blank" rel="noopener">Types of Load Balancer</a></h3><table>
<thead>
<tr>
<th>Level</th>
<th>Application Load Balancer</th>
<th>Network Load Balancer</th>
<th>Classic Load Balancer<br>(Last Generation)</th>
</tr>
</thead>
<tbody><tr>
<td>Protocol</td>
<td>(HTTP) and Secure HTTP (HTTPS)</td>
<td>Both TCP and UDP</td>
<td>HTTP, HTTPS, TCP and TLS</td>
</tr>
<tr>
<td>Routing</td>
<td>+ Route traffic to targets based on content of request.<br>+ Provides advanced request routing that is targeted at delivery of modern application architectures, <br>including microservices and container-based applications.<br>+ SSL/TLS used all the time.</td>
<td>+ Route traffic to targets based on the IP Protocol date.<br>+ Can handle millions of requests per second while maintaining ultra-low latencies.<br>+ Optimized to handle sudden and volatile network traffic patterns.</td>
<td>+ Load balance across multiple EC2 instances.</td>
</tr>
<tr>
<td>Layer</td>
<td>Operates at the application Layer<br>(OSI layer 7)</td>
<td>Operates at the transportation layer<br>(OSI layer 4)</td>
<td>Both the application and transportation layer.</td>
</tr>
</tbody></table>
<h3 id="How-elastic-load-balancing-works"><a href="#How-elastic-load-balancing-works" class="headerlink" title="How elastic load balancing works"></a>How elastic load balancing works</h3><p>放图解释:</p>
<p><img src="https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2019/10/06/illustration-2.png" alt=""></p>
<p><img src="https://d2908q01vomqb2.cloudfront.net/5b384ce32d8cdef02bc3a139d4cac0a22bb029e8/2018/05/04/Picture1-updated.jpg" alt=""></p>
<h3 id="Benefits"><a href="#Benefits" class="headerlink" title="Benefits"></a>Benefits</h3><ol>
<li>Highly available and fault-tolerant applications.</li>
<li>Automatically load balance the containerized applications.</li>
<li>Automatically scale the applications.</li>
<li>Elastic load balancing in the VPC.</li>
<li>Enable hybrid load balancing.</li>
<li>Invoking Lambda functions over HTTP(s).</li>
</ol>
<h3 id="Load-Balancer-Monitoring"><a href="#Load-Balancer-Monitoring" class="headerlink" title="Load Balancer Monitoring"></a>Load Balancer Monitoring</h3><p>Amazon CloudWatch metric</p>
<ul>
<li>Used to verify that the system is performing as expected and creates an alarm to initiate ana action if a metric goes outside an acceptable ranges.</li>
</ul>
<p>What can Cloud Watch “watch”?</p>
<p><img src="cloudwatch.png" alt=""></p>
<p>Access logs</p>
<ul>
<li>Capture detailed information about requests send to the load balancer.</li>
</ul>
<p>AWS CloudTrail logs</p>
<ul>
<li>Capture the who, what, when and where of API interactions in AWS services.</li>
</ul>
<h2 id="Auto-Scaling"><a href="#Auto-Scaling" class="headerlink" title="Auto Scaling"></a>Auto Scaling</h2><h3 id="Why-scaling"><a href="#Why-scaling" class="headerlink" title="Why scaling?"></a>Why scaling?</h3><p><img src="whyscaling.png" alt=""></p>
<p>Scaling is the ability to increase or decrease the compute capacity of your application. To understand why scaling is important, consider this example of a workload that has varying resource requirements. In this example, the most resource capacity is required on Wednesday, and the least resource capacity is required on Sunday. </p>
<p>One option is to allocate more than enough capacity so you can always meet your highest demand—in this case, Wednesday. However, this situation means that you are running resources that will be underutilized most days of the week. With this option, your costs are not optimized.</p>
<h3 id="Amazon-Auto-Scaling"><a href="#Amazon-Auto-Scaling" class="headerlink" title="Amazon Auto Scaling"></a><a href="https://aws.amazon.com/ec2/autoscaling/" target="_blank" rel="noopener">Amazon Auto Scaling</a></h3><p>AWS Auto Scaling is a separate service that monitors your applications, and it automatically adjusts capacity for the following resources:</p>
<ul>
<li>Amazon EC2 instances and Spot Fleets</li>
<li>Amazon ECS (Amazon Elastic Container Service) tasks</li>
<li>Amazon DynamoDB tables and indexes</li>
<li>Amazon Aurora Replicas</li>
</ul>
<p>Note: EC2实例，容器，non-relational DB和relational DB都可以弹性伸缩。</p>
<p>Auto-Scaling groups:</p>
<p><img src="https://miro.medium.com/max/1218/1*uS9J8btKCQaMOhnUXp62aA.jpeg" alt=""></p>
<p>With Amazon EC2 Auto Scaling, launching instances is referred to as <em>scaling out</em>, and terminating instances is referred to as <em>scaling in</em>. </p>
<p>How auto-scaling works?</p>
<p><img src="howscalingworks.png" alt=""></p>
<h2 id="Dynamic-scaling"><a href="#Dynamic-scaling" class="headerlink" title="Dynamic scaling"></a>Dynamic scaling</h2><p><img src="dynamicscaling.png" alt=""></p>
<p>To understand how it works, consider this example:</p>
<ul>
<li>You create an Amazon CloudWatch alarm to monitor CPU utilization across your fleet of EC2 instances and execute automatic scaling policies if the average CPU utilization across the fleet goes above 60 percent for 5 minutes.</li>
<li>Amazon EC2 Auto Scaling instantiates a new EC2 instance into your Auto Scaling group based on the launch configuration that you create. </li>
<li>After the new instance is added, Amazon EC2 Auto Scaling makes a call to Elastic Load Balancing to register the new EC2 instance in that Auto Scaling group. </li>
<li>Elastic Load Balancing then performs the required health checks and starts distributing traffic to that instance. Elastic Load Balancing routes traffic between EC2 instances and feeds metrics to Amazon CloudWatch. </li>
</ul>
]]></content>
      <categories>
        <category>中文, English</category>
      </categories>
      <tags>
        <tag>AWS</tag>
        <tag>Network</tag>
      </tags>
  </entry>
  <entry>
    <title>AWS学习笔记: Compute</title>
    <url>/2020/10/05/AWS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-Compute/</url>
    <content><![CDATA[<p>欢迎来到我的AWS学习笔记系列。</p>
<p>本文着重记述关于AWS云计算服务的知识点。如若转载，请先与作者联系。</p>
<p><em>本文图片来自于网络</em></p>
<h1 id="AWS-Compute"><a href="#AWS-Compute" class="headerlink" title="AWS Compute"></a>AWS Compute</h1><a id="more"></a>

<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p><img src="categorizing_compute_service.png" alt=""></p>
<h2 id="Amazon-EC2"><a href="#Amazon-EC2" class="headerlink" title="Amazon EC2"></a>Amazon EC2</h2><p>Amazon Elastic Compute Cloud (Amazon EC2)</p>
<ul>
<li>Features:<ul>
<li>Provides <strong>virtual machines</strong>—referred to as EC2 instances—in the cloud.</li>
<li>Gives you <strong>full control</strong> over the guest operating system (Windows or Linux) on each instance.</li>
<li>You can launch instances of any size into an Availability Zone anywhere in the world.<ul>
<li>From <strong>Amazon Machine Images</strong> (AMIs)</li>
<li>Control traffic to and from instances</li>
</ul>
</li>
</ul>
</li>
<li>Launch steps:<ul>
<li>1.Select an AMI<ul>
<li>A template used to create an EC2 instance</li>
<li>Win or Linux, also some pre-installed software</li>
</ul>
</li>
<li>2.Instance type<ul>
<li>Your choice of instance type determines RAM, CPU, Storage and Network performance.</li>
<li>Types: general, computing, memory, storage, accelerated optimized</li>
<li>Naming:<ul>
<li>Example: t3.large</li>
<li>T is the family name</li>
<li>3 is the generation number</li>
<li>Large is the size</li>
</ul>
</li>
<li>Networking features:<ul>
<li>Gbps varies by instance type</li>
<li>To maximize networking and bandwidth, use <strong>cluster placement group</strong> or <strong>enable enhanced networking</strong>.</li>
</ul>
</li>
</ul>
</li>
<li>3.Network settings<ul>
<li>Identify the VPC and optionally the subnet.</li>
</ul>
</li>
<li>4.IAM role(Optional)<ul>
<li>See more about IAM</li>
</ul>
</li>
<li>5.User data(Optional)<ul>
<li>Optionally specify a user data script at instance launch </li>
</ul>
</li>
<li>6.Storage option<ul>
<li>Root volume: Where the guest operating system is installed</li>
<li>(Optional) add additional volumes</li>
<li>Volume<ul>
<li>Size in GB</li>
<li>SSDs/HDDs</li>
<li>if get deleted when the instances is terminated</li>
<li>if use encryption</li>
</ul>
</li>
<li>Storage options:<ul>
<li>Amazon EBS -&gt; durable, won’t be deleted when termination</li>
<li>Amazon EC2 Instance Store: Ephemeral, get deleted when stopping.</li>
</ul>
</li>
</ul>
</li>
<li>7.tags<ul>
<li>Tagging is how you can attach metadata to an EC2 instance</li>
</ul>
</li>
<li>8.Security group<ul>
<li>A set of firewall rules that control traffic to the instance.</li>
<li>Specify the port number, the protocol, the source</li>
</ul>
</li>
<li>9.Key pair<ul>
<li>consists of a public key and private key</li>
<li>For windows AMIs: Use the private key to obtain the administrator password that you need to log in to your instance</li>
<li>For Linux AMIs: Use the private key to use SSH to securely connect to your instance.</li>
</ul>
</li>
</ul>
</li>
<li>Another option: Launch an EC2 instance with the AWS Command Line Interface</li>
<li>Instance lifecycle</li>
<li>Instance hibernation option<ul>
<li>Benefits: Save and reload content in the RAM</li>
<li>Prerequisites: <ul>
<li>Certain Linux AMIS</li>
<li>Must have encrypted Amazon EBS root volume</li>
<li>Enable Hibernation at instance launch</li>
</ul>
</li>
</ul>
</li>
<li>Using elastic address:<ul>
<li>Before using:<ul>
<li>Rebooting will not change ip address</li>
<li>If stop and then start, the external IPv4 addr and DNS hostname will change; the internal ones won’t.</li>
</ul>
</li>
<li>After:<ul>
<li>Remains allocated until get released.</li>
</ul>
</li>
</ul>
</li>
<li>EC2 instance metadata<ul>
<li>While you are connected to the instance, you can view it – <ul>
<li>In a browser: <a href="http://169.254.169.254/latest/meta-data/" target="_blank" rel="noopener">http://169.254.169.254/latest/meta-data/</a></li>
<li>In a terminal window: curl <a href="http://169.254.169.254/latest/meta-data/" target="_blank" rel="noopener">http://169.254.169.254/latest/meta-data/</a></li>
</ul>
</li>
<li>be used to configure or manage a running instance</li>
</ul>
</li>
<li>Amazon CloudWatch for monitoring</li>
</ul>
<h2 id="Amazon-EC2-Cost-Optimization"><a href="#Amazon-EC2-Cost-Optimization" class="headerlink" title="Amazon EC2 Cost Optimization"></a>Amazon EC2 Cost Optimization</h2><table>
<thead>
<tr>
<th>Pricing models</th>
<th>On-Demand Instances</th>
<th>Spot Instances</th>
<th>Reserved Instances</th>
<th>Dedicated Hosts</th>
</tr>
</thead>
<tbody><tr>
<td>Benefits</td>
<td>Low cost and flexibility</td>
<td>Large scale, dynamic workload</td>
<td>Predictability ensures compute capacity is available when needed</td>
<td>Save money on licensing costs <br> Help meet compliance and regulatory requirements</td>
</tr>
<tr>
<td>Use cases</td>
<td>Short-term, spiky, or unpredictable workloads <br> Application development or testing</td>
<td>Applications with flexible start and end times <br> Applications only feasible at very low compute prices <br> Users with urgent computing needs for large amounts of additional capacity</td>
<td>Steady state or predictable usage workloads <br> Applications that require reserved capacity, including disaster recovery <br> Users able to make upfront payments to reduce total computing costs even further</td>
<td>Bring your own license (BYOL) <br> Compliance and regulatory restrictions <br> Usage and licensing tracking <br> Control instance placement</td>
</tr>
<tr>
<td>Use cases example</td>
<td>Spiky Workloads</td>
<td>Time-Insensitive Workloads</td>
<td>Steady-State Workloads</td>
<td>Highly Sensitive Workloads</td>
</tr>
</tbody></table>
<p>Four pillars of cost optimization:</p>
<ul>
<li>1.Right size<ul>
<li>Provision instances to match the need </li>
<li>Use CloudWatch</li>
<li>Best practice: Right size, then reserve</li>
</ul>
</li>
<li>2.Increase elasticity<ul>
<li>Stop or hibernate Amazon EBS-backed instances that are not actively in use</li>
<li>Use automatic scaling to match needs based on usage </li>
</ul>
</li>
<li>3.Optimal pricing model<ul>
<li>Leverage the right pricing model for your use case</li>
<li>Consider serverless solutions (AWS Lambda)</li>
</ul>
</li>
<li>4.Optimize storage choices<ul>
<li>Mainly focus on EBS</li>
</ul>
</li>
</ul>
<h2 id="Container-Services"><a href="#Container-Services" class="headerlink" title="Container Services"></a>Container Services</h2><p>Container basics</p>
<ul>
<li>Containers are a method of operating system virtualization</li>
<li>Benefits:<ul>
<li>Repeatable</li>
<li>Self-contained execution environments</li>
<li>Software runs the same in different environments</li>
<li>Faster to launch and stop or terminate than virtual machines</li>
</ul>
</li>
</ul>
<p>Docker</p>
<ul>
<li>Docker is a software platform that enables you to build, test, and deploy applications quickly.</li>
<li>Run containers on Docker. Containers are created from a template called an image.</li>
<li>A container has everything a software application needs to run,<ul>
<li>which are l<strong>ibraries, system tools, code, runtime</strong></li>
</ul>
</li>
</ul>
<p>Container v.s. Virtual Machines<br><img src="container_vs_vm.png" alt=""></p>
<p>Amazon Elastic Container Service (Amazon ECS)</p>
<ul>
<li>A highly scalable, fast, container management service </li>
<li>Benefits:<ul>
<li>Orchestrates the execution of Docker containers</li>
<li>Maintains and scales the fleet of nodes that run your containers</li>
<li>Removes the complexity of standing up the infrastructure </li>
</ul>
</li>
<li>Amazon ECS cluster options<ul>
<li>Do you want to manage Amazon ECS cluster?</li>
<li>Yes:<ul>
<li>create an Amazon ECS cluster <strong>backed by Amazon EC2</strong> </li>
</ul>
</li>
<li>No:<ul>
<li>create an Amazon ECS cluster <strong>backed by AWS Fargate</strong> </li>
</ul>
</li>
</ul>
</li>
</ul>
<p>Kubernetes</p>
<ul>
<li>An open source software for container orchestration</li>
<li>Deploy and <strong>manage containerized applications</strong> at scale</li>
<li><strong>Complements Docker</strong><ul>
<li>Docker enables you to <strong>run multiple containers</strong> on a single OS host. </li>
<li>Kubernetes <strong>orchestrates multiple Docker</strong> hosts (nodes).</li>
</ul>
</li>
</ul>
<p>Amazon Elastic Kubernetes Service(Amazon EKS)</p>
<ul>
<li>Enables you to run Kubernetes on AWS</li>
<li>Manage clusters of Amazon EC2 compute instances</li>
</ul>
<p>Amazon Elastic Container Registry (Amazon ECR) </p>
<ul>
<li>Enables you to store, manage, and deploy your Docker containers</li>
</ul>
<h2 id="Introduction-to-AWS-Lambda"><a href="#Introduction-to-AWS-Lambda" class="headerlink" title="Introduction to AWS Lambda"></a>Introduction to AWS Lambda</h2><p><img src="lambda.png" alt=""></p>
<p>AWS Lambda:</p>
<ul>
<li>Features<ul>
<li>It supports multiple programming languages.</li>
<li>Completely automated administration</li>
<li>Built-in fault tolerance</li>
<li>It supports the orchestration of multiple functions</li>
<li>Pay-per-use pricing</li>
</ul>
</li>
<li>Event sources<ul>
<li>Configure other AWS services as event sources to invoke your function as shown here.</li>
<li>Alternatively, invoke a Lambda function from the Lambda console, AWS SDK, or AWS CLI.</li>
<li>Only execute when being triggered</li>
</ul>
</li>
<li>Limits<ul>
<li>The maximum memory allocation for a single Lambda function is 3,008 MB.</li>
<li>The maximum execution time for a Lambda function is 15 minutes.</li>
</ul>
</li>
</ul>
<h2 id="Introduction-to-AWS-Elastic-Beanstalk"><a href="#Introduction-to-AWS-Elastic-Beanstalk" class="headerlink" title="Introduction to AWS Elastic Beanstalk"></a>Introduction to AWS Elastic Beanstalk</h2><p>AWS Elastic Beanstalk</p>
<ul>
<li>An easy way to get web applications up and running</li>
<li>A managed service that automatically handles – <ul>
<li>Infrastructure provisioning and configuration</li>
<li>Deployment</li>
<li>Load balancing</li>
<li>Automatic scaling</li>
<li>Health monitoring</li>
<li>Analysis and debugging</li>
<li>Logging</li>
</ul>
</li>
<li>No additional charge for Elastic Beanstalk<ul>
<li>Pay only for the underlying resources that are used</li>
</ul>
</li>
<li>It supports web applications written for common platforms <ul>
<li>Java, .NET, PHP, Node.js, Python, Ruby, Go, and Docker</li>
</ul>
</li>
<li>You upload your code and Elastic Beanstalk automatically handles the deployment</li>
<li><img src="beanstalk.jpg" alt=""></li>
</ul>
]]></content>
      <categories>
        <category>中文, English</category>
      </categories>
      <tags>
        <tag>AWS</tag>
        <tag>Network</tag>
      </tags>
  </entry>
  <entry>
    <title>Begin of the summer</title>
    <url>/2020/06/01/Begin-of-the-summer/</url>
    <content><![CDATA[<p>于我而言，夏天是从六月开始。这边的学校喜欢把暑期学期称之为summer session. 虽然学校的academic calendar上summer session开始的时间并不是6.1，不过嘛，whatever.对我来讲，今天不仅是6.1，也是一个周一，更是上个学期杂七杂八一堆事儿的结束。所以，本篇名为夏之初，begin of the summer.</p>
<p>如果说19fall学期是起初焦虑担忧，到最后斗志昂扬的一个,看似顺利的转变，那么20spr学期便五味杂陈的多。这几个月碰上了新冠病毒，经济崩盘，留学生签证入境受限和最近的美国暴动，一切的一切都好像预示着什么，“山雨欲来风满楼”。而我个人的生活也因各种大小事儿变得碎片化，脑子里面充斥的东西也不像之前纯粹而勇敢。但是总体来讲个人意志还算坚强，所以撑过了这学期，保住了成绩，办完了各种手续，转租了房子，搬了家。</p>
<p>生活方面的事儿就聊到这里吧。今天开始有计划的刷题。那么每天都会大致记录一下刷了什么题，再刷题过程学到了什么。</p>
<p>今天刷了两道：</p>
<ol>
<li><a href="https://leetcode.com/explore/challenge/card/june-leetcoding-challenge/539/week-1-june-1st-june-7th/3347/" target="_blank" rel="noopener">Invert Binary Tree</a></li>
<li><a href="https://leetcode.com/problems/number-of-islands/" target="_blank" rel="noopener">lc200:Number of Islands</a></li>
</ol>
<p>第一道题没什么好说的，简单的递归。</p>
<p>第二道题，我用两种方法做：BFS和DSU(Disjoint Set Union). </p>
<ul>
<li>Java的List可以用来存放一些，用python的眼光来看，tuple。实属好用。</li>
<li>如果做题的时候需要自定义一些数据结构，可以用类中类的方式来解决。需要注意的是，对于一个类中的成员内部类，变量名等若与外部类相同会出现隐藏外部的情况。如果想访问外部类中属性或方法的时候，使用外部类.this.Bluhbluh…拓展阅读：<a href="https://blog.csdn.net/u010126792/java/article/details/82840563" target="_blank" rel="noopener">java内部类为什么可以访问外部类属性方法</a></li>
<li>DSU的union方法中，切记Union的是root们，不慎写错的话bug不好找。</li>
</ul>
<p>目前看来就是这样了，祝自己，祝大家，夏天快乐。</p>
]]></content>
      <categories>
        <category>中文</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>AWS学习笔记: Networking and Content Delivery</title>
    <url>/2020/10/04/AWS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-Networking-and-Content-Delivery/</url>
    <content><![CDATA[<p>欢迎来到我的AWS学习笔记系列。</p>
<p>本文着重记述关于AWS网络和内容分发的知识点。如若转载，请先与作者联系。</p>
<p><em>本文图片来自于网络</em></p>
<h1 id="AWS-Networking-and-Content-Delivering"><a href="#AWS-Networking-and-Content-Delivering" class="headerlink" title="AWS Networking and Content Delivering"></a>AWS Networking and Content Delivering</h1><a id="more"></a>

<h2 id="Sec-I-Networking-Basics"><a href="#Sec-I-Networking-Basics" class="headerlink" title="Sec I: Networking Basics"></a>Sec I: Networking Basics</h2><p><img src="sec1.jpg" alt=""></p>
<h2 id="Sec-II-Amazon-VPC"><a href="#Sec-II-Amazon-VPC" class="headerlink" title="Sec II: Amazon VPC"></a>Sec II: Amazon VPC</h2><p><img src="sec2.1.jpeg" alt=""></p>
<p><img src="sec2.2.jpeg" alt=""></p>
<h2 id="Sec-III-VPC-Networking"><a href="#Sec-III-VPC-Networking" class="headerlink" title="Sec III: VPC Networking"></a>Sec III: VPC Networking</h2><h3 id="Outlines"><a href="#Outlines" class="headerlink" title="Outlines"></a>Outlines</h3><p>Internet gateway: Connects your VPC to the internet</p>
<p>NAT gateway: Enables instances in a private subnet to connect to the internet</p>
<p>VPC endpoint: Connects your VPC to supported AWS services</p>
<p>VPC peering: Connects your VPC to other VPCs</p>
<p>VPC sharing: Allows multiple AWS accounts to create their application resources into shared, centrally-managed Amazon VPCs</p>
<p>AWS Site-to-Site VPN: Connects your VPC to remote networks</p>
<p>AWS Direct Connect: Connects your VPC to a remote network by using a dedicated network connection</p>
<p>AWS Transit Gateway: A hub-and-spoke connection alternative to VPC peering</p>
<p><a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Internet_Gateway.html" target="_blank" rel="noopener">Internet Gateway(public subnet公网连接)</a></p>
<ul>
<li>Scalable, redundant and highly available.</li>
<li>Allow communication between instances in VPC and the internet.</li>
<li>Two purposes:<ul>
<li>Provide a target for the VPC route tables for internet-routable traffic.</li>
<li>Perform network address translation(NAT) for instances within VPC.</li>
</ul>
</li>
<li>Subnet and gateway<ul>
<li>If a subnet is associated with a <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html#RouteTables" target="_blank" rel="noopener">route table</a> which</li>
<li>has a gateway -&gt; public subnet;</li>
<li>doesn’t have a gateway -&gt; private subnet.</li>
</ul>
</li>
<li>To make subset public,<ul>
<li>Attach an internet gateway to the VPC(not directly to the subnet).</li>
<li>Add a route to the route table to send <strong>non-local</strong> traffic through the gateway to the internet</li>
<li>In your subnet route table, you can specify a route for the internet gateway to <strong>all destinations not explicitly known to the route table</strong> (0.0.0.0/0 for IPv4 or ::/0 for IPv6)<br><img src="internet-gateway-overview-diagram.png" alt=""></li>
</ul>
</li>
</ul>
<p><a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat.html" target="_blank" rel="noopener">Network Address Gateway(NAT) (private subnet借public subnet单向访问公网)</a></p>
<ul>
<li>Reside in <strong>public subnet</strong>, work for <strong>private subnet</strong>.</li>
<li>Enable private subnets to access the Internet, but prevent the Internet from initializing connection with private subnets.</li>
<li>Have to assign an elastic IP address to NAT gateway.</li>
<li>Alternative: NAT Instance, but NAT gateway is recommended because:<ul>
<li>NAT gateway is a managed NAT service that provides better availability, higher bandwidth, and less administrative effort.</li>
<li>For common use cases, AWS recommends that you <strong>use a NAT gateway instead of a NAT instance</strong>.<br><img src="nat-gateway-diagram.png" alt=""></li>
</ul>
</li>
</ul>
<p><a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-sharing.html" target="_blank" rel="noopener">VPC Sharing(同组织用户共享VOC)</a></p>
<ul>
<li>VPC sharing enables customers to share subnets with other AWS accounts in the same organization in AWS Organizations.</li>
<li>Application resources: such as Amazon EC2 instances, Amazon Relational Database Service (Amazon RDS) databases, Amazon Redshift clusters, and AWS Lambda functions.</li>
<li>The participants can view, create, modify, and delete their application resources in the subnets that are shared with them.</li>
<li>Centrally controlled VPC structure, routing, IP address allocation.<br><img src="https://media.amazonwebservices.com/blog/2017/dc_global_mod_after_1.png" alt=""></li>
</ul>
<p><a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-peering.html" target="_blank" rel="noopener">VPC Peering(VPC间private互联)</a></p>
<ul>
<li>A VPC peering connection is a networking <strong>connection between two VPCs</strong> that enables you to route traffic between them privately. </li>
<li>When you set up the peering connection, you create rules in your route table to allow the VPCs to communicate with each other through the peering resource.</li>
<li>Restrictions:<ul>
<li>IP address ranges cannot overlap. </li>
<li>Transitive peering is not supported. A&lt;-&gt;B, A&lt;-&gt;C, cannot infer B&lt;-&gt;C.</li>
<li>You can only have one peering resource between the same two VPCs.</li>
</ul>
</li>
</ul>
<p><a href="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html" target="_blank" rel="noopener">AWS Site-to-Site VPN(VPC到外部网络点对点VPN连接)</a></p>
<ul>
<li>From <strong>private subnet</strong> to your own(remote) network.</li>
<li>By default, instances that you launch into a VPC cannot communicate with a remote network. To connect your VPC to your remote network (that is, create a virtual private network or VPN connection), you:<ul>
<li>Create a new virtual gateway device (called a virtual private network (VPN) gateway) and attach it to your VPC.</li>
<li>Define the configuration of the VPN device or the customer gateway. The customer gateway is not a device but an AWS resource that provides information to AWS about your VPN device.</li>
<li>Create a custom route table to point corporate data center-bound traffic to the VPN gateway. You also must update security group rules. (You will learn about security groups in the next section.)</li>
<li>Establish an AWS Site-to-Site VPN (Site-to-Site VPN) connection to link the two systems together.</li>
<li>Configure routing to pass traffic through the connection.<br><img src="aws_sts_vpn.png" alt=""></li>
</ul>
</li>
</ul>
<p><a href="https://aws.amazon.com/directconnect/" target="_blank" rel="noopener">AWS Direct Connect(VPC与外部数据中心建立private高性能连接)</a></p>
<ul>
<li><strong>Private connection</strong> from your VPC to your data center. The key difference between VPN:<ul>
<li>It focuses on <strong>increasing the performance</strong> of the connection.</li>
<li>Replace AWS Site-to-Site VPN with AWS Direct Connect.</li>
<li>Use open standard 802.1q virtual local area networks (VLANs).</li>
</ul>
</li>
<li>reduce your network costs, increase bandwidth throughput, and provide a more consistent network experience than internet-based connections.<br><img src="https://docs.aws.amazon.com/directconnect/latest/UserGuide/images/direct_connect_overview.png" alt=""></li>
</ul>
<p><a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints.html" target="_blank" rel="noopener">VPC Endpoints(VPC与AWS内部services建立private互联)</a></p>
<ul>
<li>Still <strong>private connection</strong>, connect your VPC to supported AWS services and VPC endpoint services that are powered by AWS PrivateLink.</li>
<li>Connection to these services does not require an internet gateway, NAT device, VPN connection, or AWS Direct Connect connection.</li>
<li>Instances in your VPC do not require public IP addresses to communicate with resources in the service. Traffic between your VPC and the other service does not leave the Amazon network.<br><img src="vpc_endpoints.png" alt=""></li>
</ul>
<p><a href="https://docs.aws.amazon.com/vpc/latest/tgw/what-is-transit-gateway.html" target="_blank" rel="noopener">AWS Transit Gateway(将上述各类connection用一个hub集成)</a></p>
<ul>
<li>A transit gateway <strong>acts as a hub that controls how traffic is routed</strong> among all the connected networks, which act like spokes. </li>
<li>You can configure your VPCs in several ways, and take advantage of numerous connectivity options and gateways, but managing point-to-point connectivity across many VPCs without the ability to centrally manage the connectivity policies can be operationally costly and difficult.</li>
<li>To solve this problem, you can use AWS Transit Gateway to simplify your networking model. With AWS Transit Gateway, you only need to create and manage a single connection from the central gateway into each VPC, on-premises data center, or remote office across your network.<br><img src="aws_transit_gateway.png" alt=""></li>
</ul>
<h2 id="Sec-IV-VPC-Security"><a href="#Sec-IV-VPC-Security" class="headerlink" title="Sec IV: VPC Security"></a>Sec IV: VPC Security</h2><p>In this section, you learn about two Amazon VPC firewall options that you can use to secure your VPC: <strong>security groups</strong> and <strong>network access control lists</strong> (network ACLs).</p>
<p><a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html#VPCSecurityGroups" target="_blank" rel="noopener">Security Groups(instance级别安全措施)</a></p>
<ul>
<li>A security group acts as a virtual firewall for your instance, and it controls inbound and outbound traffic. </li>
<li>Security groups act at the instance level, not the subnet level. Therefore, each instance in a subnet in your VPC can be assigned to a different set of security groups.<br><img src="https://i2.wp.com/networkinterview.com/wp-content/uploads/2019/11/security-groups-in-AWS.jpg?w=800&ssl=1" alt=""></li>
<li>By default, no inbound traffic allowed; all outbound traffic allowed.</li>
<li>Stateful. <ul>
<li>if you send a request from your instance, the response traffic for that request is allowed to flow in regardless of inbound security group rules. </li>
<li>Responses to allowed inbound traffic are allowed to flow out, regardless of outbound rules. </li>
</ul>
</li>
<li>Custom Security Rules<ul>
<li>You can specify allow rules, but not deny rules. </li>
<li>All rules are evaluated before the decision to allow traffic.</li>
</ul>
</li>
</ul>
<p><a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html" target="_blank" rel="noopener">network access control list (network ACL) (subnet/VPC级别安全措施)</a></p>
<ul>
<li>Acts as a firewall for controlling traffic in and out of one or more subnets.</li>
<li>Each subnet in your VPC must be associated with a network ACL. If you don’t explicitly associate a subnet with a network ACL, the subnet is automatically associated with the default network ACL. </li>
<li>You can associate a network ACL with multiple subnets; however, a subnet can be associated with only one network ACL at a time.</li>
<li>Your VPC automatically comes with a modifiable default network ACL.</li>
<li>Difference between ACL and security groups:<ul>
<li>By default, it allows all inbound and outbound IPv4 traffic and, if applicable, IPv6 traffic.</li>
<li>Each rule can either allow or deny traffic. </li>
<li>Network ACLs are stateless, which means that no information about a request is maintained after a request is processed. </li>
</ul>
</li>
<li>Custom ACL<ul>
<li>By default, each custom network ACL denies all inbound and outbound traffic until you add rules. </li>
<li>A network ACL contains a numbered list of rules that are evaluated in order, starting with the lowest numbered rule. The highest number that you can use for a rule is <strong>32,766</strong>.</li>
<li>AWS recommends to create rules in increments.</li>
</ul>
</li>
</ul>
<p>Comparison between security groups and network ACL.</p>
<table>
<thead>
<tr>
<th></th>
<th>Security Groups</th>
<th>Network ACLs</th>
</tr>
</thead>
<tbody><tr>
<td>Scope</td>
<td>Instance level.</td>
<td>Subnet level.</td>
</tr>
<tr>
<td>Default</td>
<td>All inbound traffic denied; all outbound traffic allowed.</td>
<td>Allows all inbound and outbound IPv4 traffic. If applicable, allows IPv6 traffic.</td>
</tr>
<tr>
<td>Supported rules</td>
<td><code>allow</code> rules only</td>
<td><code>allow</code> and <code>deny</code> rules</td>
</tr>
<tr>
<td>State</td>
<td>Stateful</td>
<td>Stateless</td>
</tr>
<tr>
<td>Customize</td>
<td>User can only specify allow rules but deny rules.</td>
<td>By default, custom ACL denies all inbound and outbound traffic until adding rules. <br> User can both add allow or deny rules.</td>
</tr>
<tr>
<td>Order of rules</td>
<td>All rules are evaluated.</td>
<td>Rules are evaluated in number order(increment).</td>
</tr>
</tbody></table>
<h2 id="Sec-V-Route-53"><a href="#Sec-V-Route-53" class="headerlink" title="Sec V: Route 53"></a>Sec V: Route 53</h2><p>Amazon Route 53 is a highly available and scalable cloud <strong>Domain Name System (DNS)</strong> web service. </p>
<ul>
<li>Translating names (like <a href="http://www.example.com" target="_blank" rel="noopener">www.example.com</a>) into the numeric IP addresses (like 192.0.2.1).</li>
<li>Is fully compliant with IPv4 and IPv6</li>
<li>Connects user requests to infrastructure running in AWS and also outside of AWS</li>
<li>Is used to check the health of your resources</li>
<li>Features traffic flow</li>
<li>Enables you to register domain names</li>
<li>support routings<ul>
<li>Simple routing – Use in single-server environments</li>
<li>Weighted round robin routing – Assign weights to resource record sets to specify the frequency</li>
<li>Latency routing – Help improve your global applications</li>
<li>Geolocation routing – Route traffic based on location of your users</li>
<li>Geoproximity routing – Route traffic based on location of your resources</li>
<li>Failover routing – Fail over to a backup site if your primary site becomes unreachable</li>
<li>Multivalue answer routing – Respond to DNS queries with up to eight healthy records selected at random</li>
</ul>
</li>
<li>Multi-Region deployment<ul>
<li>Latency-based routing to the Region</li>
<li>Load balancing routing to the Availability Zone</li>
</ul>
</li>
<li>Route Failover<ul>
<li>Configuring backup and failover scenarios for your own applications</li>
<li>Enabling highly available multi-region architectures on AWS</li>
<li>Creating health checks</li>
<li><img src="https://miro.medium.com/max/1750/1*o76vPCV2AF0jeVVunVwYDA.png" alt=""></li>
</ul>
</li>
</ul>
<h2 id="Sec-VI-CloudFront"><a href="#Sec-VI-CloudFront" class="headerlink" title="Sec VI: CloudFront"></a>Sec VI: CloudFront</h2><p>The purpose of networking is to share information between connected resources. So far in this module, you learned about VPC networking with Amazon VPC. You learned about the different options for connecting your VPC to the internet, to remote networks, to other VPCs, and to AWS services. </p>
<p>Content delivery occurs over networks, too—for example, when you stream a movie from your favorite streaming service. In this final section, you learn about Amazon CloudFront, which is a content delivery network (CDN) service.</p>
<p>Content Delivery Network(CDN)</p>
<ul>
<li>Globally distributed system of caching servers.</li>
<li>The CDN delivers a local copy of the requested content from a cache edge or Point of Presence that provides the fastest delivery to the requester.</li>
<li>Accelerates delivery of dynamic content</li>
<li>Improves application performance and scaling</li>
</ul>
<p><a href="https://aws.amazon.com/cloudfront/" target="_blank" rel="noopener">Amazon CloudFront(Amazon提供的CDN服务)</a></p>
<ul>
<li>Features:  <ul>
<li>Fast, global, and secure CDN service</li>
<li>Global network of edge locations and Regional edge caches</li>
<li>Self-service model </li>
<li>Pay-as-you-go pricing</li>
</ul>
</li>
<li>Global infrastructure<ul>
<li>Edge locations: Network of data centersthat CloudFront uses to serve popular content quickly to customers.</li>
<li>Regional edge locations: CloudFrontlocation that caches content that is notpopular enough to stay at an edge location. It is located between the origin server and the global edge location. </li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>中文, English</category>
      </categories>
      <tags>
        <tag>AWS</tag>
        <tag>Network</tag>
      </tags>
  </entry>
  <entry>
    <title>Design Pattern 学习笔记</title>
    <url>/2020/10/19/Design-Pattern-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在学习设计模式，故用此篇记述所学内容。</p>
<a id="more"></a>

<h2 id="SOLID-Principle"><a href="#SOLID-Principle" class="headerlink" title="SOLID Principle"></a>SOLID Principle</h2><p>Acronym for OOP design principles.</p>
<ul>
<li><strong>S</strong>ingle responsibility principle.</li>
<li><strong>O</strong>pen/closed principle.</li>
<li><strong>L</strong>iskov substitution principle.</li>
<li><strong>I</strong>nterface segregation principle.</li>
<li><strong>D</strong>ependency inversion principle.</li>
</ul>
<h3 id="Single-responsibility-principle"><a href="#Single-responsibility-principle" class="headerlink" title="Single responsibility principle"></a>Single responsibility principle</h3><ul>
<li>Do one thing and do it well.</li>
<li>Utility method can be used to carry out tangential jobs(logging, reporting).</li>
<li>Do not print statements in the core classes, return data can be handled by etc, loggings.</li>
</ul>
<h3 id="Open-close-principle"><a href="#Open-close-principle" class="headerlink" title="Open/close principle"></a>Open/close principle</h3><ul>
<li>Open for extension, closed to modification.</li>
<li>Extending existing functionality is the preferred way to add new functionality.</li>
</ul>
<h3 id="Liskov-substitution-principle-里氏替换原则"><a href="#Liskov-substitution-principle-里氏替换原则" class="headerlink" title="Liskov substitution principle(里氏替换原则)"></a>Liskov substitution principle(里氏替换原则)</h3><ul>
<li>If S is a subtype of T, then objects of the type T may be replaced by objects of type S in a program.</li>
</ul>
<h3 id="Interface-segregation-principle"><a href="#Interface-segregation-principle" class="headerlink" title="Interface segregation principle"></a>Interface segregation principle</h3><ul>
<li>Keep interfaces minimal. Do not add extraneous methods declarations.</li>
<li>Prefer to implement multiple interfaces on classes, rather than put too much functionality into one interface.</li>
</ul>
<h3 id="Dependency-inversion-principle"><a href="#Dependency-inversion-principle" class="headerlink" title="Dependency inversion principle"></a>Dependency inversion principle</h3><ul>
<li>High level modules should not depend on lower level modules. Both should depend on abstractions.</li>
</ul>
<h2 id="Modular-Design"><a href="#Modular-Design" class="headerlink" title="Modular Design"></a>Modular Design</h2><p>Modules: Some part of a program responsible for a specific area of functionality.</p>
<h3 id="Idea-of-modular-software"><a href="#Idea-of-modular-software" class="headerlink" title="Idea of modular software"></a>Idea of modular software</h3><ul>
<li>Decomposition: break a problem into modules to reduce complexity and enable teamwork</li>
<li>Composability: put modules together, ideally in various ways</li>
<li>Understandability should be understandable without reference to other modules</li>
<li>Continuity small change in requirements should be answerable by small (local) change in design</li>
<li>Isolation contain errors &amp; enable independent development</li>
</ul>
<h3 id="Maximize-cohesion-amp-minimize-coupling"><a href="#Maximize-cohesion-amp-minimize-coupling" class="headerlink" title="Maximize cohesion &amp; minimize coupling"></a>Maximize cohesion &amp; minimize coupling</h3><p>Cohesion:</p>
<ul>
<li>How well a module encapsulates a single notion/responsibility </li>
<li>Degree to which the elements of a module belong together</li>
</ul>
<p>Coupling:</p>
<ul>
<li>Degree to which a module interacts with or depends on other modules</li>
</ul>
<h3 id="Decoupling-解耦合"><a href="#Decoupling-解耦合" class="headerlink" title="Decoupling(解耦合)"></a>Decoupling(解耦合)</h3><ul>
<li><a href="https://docs.oracle.com/javase/tutorial/java/IandI/interfaceAsType.html" target="_blank" rel="noopener">Using an Interface as a Type</a></li>
<li>Callback design pattern: Method call from a module to a client, to notify it about some condition.</li>
</ul>
<h3 id="Coupling-from-worst-to-best"><a href="#Coupling-from-worst-to-best" class="headerlink" title="Coupling: from worst to best"></a>Coupling: from worst to best</h3><ul>
<li>Content coupling (worst): One class depends on the internal data or behavior of another. <ul>
<li>一个类的field中定义另一个类的对象</li>
</ul>
</li>
<li>Common coupling: Classes share common data (global state). Includes static fields.<ul>
<li>两个类共享了静态变量</li>
</ul>
</li>
<li>Control coupling: Method calls send information to control the method logic (e.g. in the form of flags). Caller must have knowledge of implementation.<ul>
<li>函数调用者除了数据外还传入一些控制量</li>
</ul>
</li>
<li>Stamp coupling: Too much data is passed; e.g. a method that takes an object as an argument but only uses (needs) one attribute of that object.<ul>
<li>函数调用者传了太多不需要的数据</li>
</ul>
</li>
<li>Data coupling: Passing data as a parameter to a method call. Mostly unavoidable.<ul>
<li>函数调用者传参，不可避免</li>
</ul>
</li>
<li>Message coupling: Calling a method that takes no parameters.<ul>
<li>函数调用者无需传参(getter and setter)</li>
</ul>
</li>
</ul>
<h3 id="Why-reduce-coupling"><a href="#Why-reduce-coupling" class="headerlink" title="Why reduce coupling?"></a>Why reduce coupling?</h3><ul>
<li>Design decisions made locally do not interfere with the correctness of other modules.</li>
<li>Testing is easier to create.</li>
<li>Easy maintenance.</li>
</ul>
<h2 id="Design-Patterns"><a href="#Design-Patterns" class="headerlink" title="Design Patterns"></a>Design Patterns</h2><h3 id="Model-View-Controller-MVC"><a href="#Model-View-Controller-MVC" class="headerlink" title="Model-View-Controller(MVC)"></a>Model-View-Controller(MVC)</h3><p><img src="https://mdn.mozillademos.org/files/16042/model-view-controller-light-blue.png" alt=""></p>
<p>Model: Underlying business data of your software.</p>
<ul>
<li>Contains the data/object or state of the system.</li>
</ul>
<p>View: The UI, which displays data to the user and receive user input.</p>
<ul>
<li>May support multiple views of single model.</li>
</ul>
<p>Controller</p>
<ul>
<li>Acts on both model and view.</li>
<li>Reacts to user input and other events.</li>
<li>Sends message to model based on events.</li>
</ul>
<p>Note: </p>
<ul>
<li>Multiple views and controllers possible, but only one model.</li>
<li>Models and views may be reusable, but controller is typically not reusable.</li>
</ul>
<h3 id="Factory-Pattern"><a href="#Factory-Pattern" class="headerlink" title="Factory Pattern"></a>Factory Pattern</h3><p>Please refer to <a href="https://refactoring.guru/design-patterns/factory-method" target="_blank" rel="noopener">factory method</a>, they got everything you need.</p>
<p>//to be continued</p>
]]></content>
      <categories>
        <category>中文, English</category>
      </categories>
      <tags>
        <tag>software development</tag>
      </tags>
  </entry>
  <entry>
    <title>Git: 修改.gitignore并应用</title>
    <url>/2020/06/02/Git-%E4%BF%AE%E6%94%B9-gitignore%E5%B9%B6%E5%BA%94%E7%94%A8/</url>
    <content><![CDATA[<ol>
<li>git rm -r –cached file_name/dir</li>
<li>修改.gitignore</li>
<li><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>中文</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>IntelliJ 进行Java单元测试时出错: IntelliJ test events were not received原因及解决办法</title>
    <url>/2020/10/06/IntelliJ-%E8%BF%9B%E8%A1%8CJava%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E6%97%B6%E5%87%BA%E9%94%99-IntelliJ-test-events-were-not-received%E5%8E%9F%E5%9B%A0%E5%8F%8A%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
    <content><![CDATA[<p>最近升级了一下IntelliJ，发现在Unit Test报错：</p>
<pre><code>IntelliJ test events were not received</code></pre><p>网上查了一下，可能是升级的时候将设置里面build tools里面的run testing with改回了默认的gradle。再改成IntelliJ IDEA即可</p>
<p>参考链接: <a href="https://stackoverflow.com/questions/57795263/test-events-were-not-received-when-run-tests-using-intellij" target="_blank" rel="noopener">https://stackoverflow.com/questions/57795263/test-events-were-not-received-when-run-tests-using-intellij</a></p>
]]></content>
      <categories>
        <category>中文, English</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>IntelliJ</tag>
      </tags>
  </entry>
  <entry>
    <title>Java 编译打包过程记录</title>
    <url>/2020/10/26/Java-%E7%BC%96%E8%AF%91%E6%89%93%E5%8C%85%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>本文记录一次作业中，使用Java编译打包的过程。</p>
<a id="more"></a>

<p>假设src目录如下：</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">src</span><br><span class="line">├── main</span><br><span class="line">│   ├── <span class="keyword">java</span></span><br><span class="line"><span class="keyword">│ </span>  │   ├── xxx.<span class="keyword">java</span></span><br><span class="line"><span class="keyword">│ </span>  │   ├── yyy.<span class="keyword">java</span></span><br><span class="line"><span class="keyword">│ </span>  │   ├── zzz.<span class="keyword">java</span></span><br><span class="line"><span class="keyword">│ </span>  └── resources</span><br><span class="line">└── test</span><br><span class="line">    ├── <span class="keyword">java</span></span><br><span class="line"><span class="keyword"> </span>   │   ├── xxxTest.<span class="keyword">java</span></span><br><span class="line"><span class="keyword"> </span>   │   ├── yyyTest.<span class="keyword">java</span></span><br><span class="line"><span class="keyword"> </span>   │   ├── zzzTest.<span class="keyword">java</span></span><br><span class="line"><span class="keyword"> </span>   └── resources</span><br></pre></td></tr></table></figure>

<p>假定起始路径为工作目录。</p>
<h2 id="使用javac编译"><a href="#使用javac编译" class="headerlink" title="使用javac编译"></a>使用<code>javac</code>编译</h2><p>JDK负责编译过程，JRE负责运行时。具体命令如下</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">javac</span> -d build src/main/java/<span class="regexp">*.java</span></span><br></pre></td></tr></table></figure>

<p>该命令会编译 <code>src/main/java</code>路径下所有java文件，并将输出的.class文件保存到<code>build</code>文件夹中。</p>
<h2 id="使用jar打包"><a href="#使用jar打包" class="headerlink" title="使用jar打包"></a>使用<code>jar</code>打包</h2><p>进入<code>build</code>文件夹。注意这步很重要，如果不在build文件夹内进行后续打包操作的话，即使可以在外部利用相对路径解决问题，打包出来的jar包在运行的时候会报“找不到主类”的错误（哪怕已经在manifest中写明）。目前出现这种情况的原因暂且不明。</p>
<p>在打包之前，要创建一个<code>MANIFEST.MF</code>来指明包中从哪个类开始运行（Main.class）</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">Manifest-Version:</span> <span class="number">1.0</span></span><br><span class="line"><span class="attr">Main-Class:</span> <span class="string">Main</span></span><br></pre></td></tr></table></figure>

<p>之后运行：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">jar</span> <span class="selector-tag">cvmf</span> <span class="selector-tag">MANIFEST</span><span class="selector-class">.MF</span> <span class="selector-tag">run</span><span class="selector-class">.jar</span> *<span class="selector-class">.class</span></span><br></pre></td></tr></table></figure>

<p>意为将路径下所有的.class文件打包，生成的文件名叫<code>run.jar</code>，所使用的manifest文件名为<code>MANIFEST.MF</code>。</p>
<p><code>jar</code>命令的选项cvmf分别表示：</p>
<ul>
<li>-c, –create               Create the archive</li>
<li>-v, –verbose              Generate verbose output on standard output</li>
<li>-m, –manifest=FILE        Include the manifest information from the given manifest file</li>
<li>-f, –file=FILE            The archive file name. When omitted, either stdin or stdout is used based on the operation</li>
</ul>
<p>注意，mf的相对顺序决定了manifest文件名和生成jar包文件名的相对顺序。</p>
<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>得到<code>run.jar</code>包后就可以运行了。具体位置随意。</p>
<p><code>jar -jar run.jar args0 args1...</code></p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>在过程中，我遇到了一个很奇怪的问题。使用apple自带的terminal运行javac的时候，会出现file not found的错误，然而其实file肯定被found了因为我输入的时候用的是*.java，报错的时候都出现了其中一个的文件名…但是在Intellij的terminal中不会出现该问题。我怀疑是和两个shell的环境变量不同有关，但是自己打印了一下环境变量尚未发现疑点。此处有待后续挖掘。</p>
]]></content>
      <categories>
        <category>中文</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Leetcode刷题积累</title>
    <url>/2020/10/01/Leetcode%E5%88%B7%E9%A2%98%E7%A7%AF%E7%B4%AF/</url>
    <content><![CDATA[<h2 id="Ask-search-and-learn"><a href="#Ask-search-and-learn" class="headerlink" title="Ask, search and learn."></a>Ask, search and learn.</h2><h2 id="Java-for-each-char-in-string"><a href="#Java-for-each-char-in-string" class="headerlink" title="Java for each char in string?"></a>Java for each char in string?</h2><ol>
<li>for (char ch: “xyz”.toCharArray() { }; //<a href="https://docs.oracle.com/javase/6/docs/api/java/lang/String.html#toCharArray%28%29" target="_blank" rel="noopener">toCharArray()</a></li>
<li>for (int i = 0; i &lt; s.length(); i++&gt;) and s.charAt(i)</li>
</ol>
<a id="more"></a>

<h2 id="Java-for-each-list"><a href="#Java-for-each-list" class="headerlink" title="Java for each list?"></a>Java for each list?</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;String&gt; l = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"><span class="keyword">for</span>(String str: l)</span><br></pre></td></tr></table></figure>

<h2 id="Java-if-element-in-set"><a href="#Java-if-element-in-set" class="headerlink" title="Java if element in set?"></a>Java if element in set?</h2><p>Set. contains() method is used to check whether a specific element is present in the Set or not. So basically it is used to check if a Set contains any particular element.</p>
<p><a href="https://www.geeksforgeeks.org/set-contains-method-in-java-with-examples/#:~:text=Set.,Set%20contains%20any%20particular%20element." target="_blank" rel="noopener">Set contains() method in Java with Examples</a></p>
<h2 id="Java-create-an-ArrayList-literal"><a href="#Java-create-an-ArrayList-literal" class="headerlink" title="Java create an ArrayList literal"></a>Java create an ArrayList literal</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Arrays.asList(<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>);</span><br></pre></td></tr></table></figure>

<h2 id="Java-create-an-array-literal"><a href="#Java-create-an-array-literal" class="headerlink" title="Java create an array literal"></a>Java create an array literal</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span>[] intArray = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br></pre></td></tr></table></figure>
<h2 id="Java-initialize-a-hashset"><a href="#Java-initialize-a-hashset" class="headerlink" title="Java initialize a hashset"></a>Java initialize a hashset</h2><p><a href="https://www.baeldung.com/java-initialize-hashset" target="_blank" rel="noopener">https://www.baeldung.com/java-initialize-hashset</a></p>
<p>One common way:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Set s = <span class="keyword">new</span> HashSet&lt;&gt;(Arrays.asList(<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>));</span><br></pre></td></tr></table></figure>

<h2 id="Binary-search-in-Java"><a href="#Binary-search-in-Java" class="headerlink" title="Binary search in Java"></a>Binary search in Java</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Recursive</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">binarySearch</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (r &gt;= l) &#123; </span><br><span class="line">        <span class="keyword">int</span> mid = l + (r - l) / <span class="number">2</span>; </span><br><span class="line">        <span class="keyword">if</span> (arr[mid] == x) </span><br><span class="line">            <span class="keyword">return</span> mid; </span><br><span class="line">        <span class="keyword">if</span> (arr[mid] &gt; x) </span><br><span class="line">            <span class="keyword">return</span> binarySearch(arr, l, mid - <span class="number">1</span>, x); </span><br><span class="line">        <span class="keyword">return</span> binarySearch(arr, mid + <span class="number">1</span>, r, x); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Iterative</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">binarySearch</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> x)</span> </span>&#123; </span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>, r = arr.length - <span class="number">1</span>; </span><br><span class="line">    <span class="keyword">while</span> (l &lt;= r) &#123; </span><br><span class="line">        <span class="keyword">int</span> m = l + (r - l) / <span class="number">2</span>; </span><br><span class="line">        <span class="keyword">if</span> (arr[m] == x) </span><br><span class="line">            <span class="keyword">return</span> m; </span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (arr[m] &lt; x) </span><br><span class="line">            l = m + <span class="number">1</span>; </span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            r = m - <span class="number">1</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="When-the-binary-search-fails-to-find-the-value-what-is-the-position-of-start-and-end"><a href="#When-the-binary-search-fails-to-find-the-value-what-is-the-position-of-start-and-end" class="headerlink" title="When the binary search fails to find the value, what is the position of start and end?"></a>When the binary search fails to find the value, what is the position of start and end?</h2><ol>
<li>Before breaking the loop, the start and end must be at the same index.</li>
<li>When breaking the loop, start = end + 1.</li>
</ol>
<h2 id="Java-list-to-array-array-to-list"><a href="#Java-list-to-array-array-to-list" class="headerlink" title="Java list to array(array to list)"></a>Java list to array(array to list)</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ArrayList.toArray() <span class="comment">// list -&gt; array</span></span><br></pre></td></tr></table></figure>

<p>As for Array -&gt; List, use <code>Arrays.asList()</code>. But do remember, this method does not handle boxing! So if you want to convert a <code>int[]</code>, be sure to transform to <code>Integer[]</code> first or don’t use this method.</p>
<p>Reference: for <code>int[]</code> there is <a href="https://stackoverflow.com/a/1073933/9045814" target="_blank" rel="noopener">no shortcut</a>.</p>
<h2 id="Java-add-a-list-to-another-list"><a href="#Java-add-a-list-to-another-list" class="headerlink" title="Java add a list to another list"></a>Java add a list to another list</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">list1.addAll(list2);</span><br></pre></td></tr></table></figure>

<h2 id="How-to-compare-two-arrays-or-strings"><a href="#How-to-compare-two-arrays-or-strings" class="headerlink" title="How to compare two arrays or strings?"></a>How to compare two arrays or strings?</h2><p>Array: java.util.Arrays.equals(a1, a2)</p>
<p>String; str.equals()</p>
<h2 id="How-to-sort-a-int-array-with-int-0-as-index"><a href="#How-to-sort-a-int-array-with-int-0-as-index" class="headerlink" title="How to sort a int[][] array with int[][0] as index?"></a>How to sort a int[][] array with int[][0] as index?</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">class MyComparator implements Comparator&lt;int[]&gt; &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span>[] b)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> a[<span class="number">0</span>] &lt; b[<span class="number">0</span>] ? -<span class="number">1</span> : a[<span class="number">0</span>] == b[<span class="number">0</span>] ? <span class="number">0</span> : <span class="number">1</span>; <span class="comment">// ascending</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Sort-a-collection-or-array"><a href="#Sort-a-collection-or-array" class="headerlink" title="Sort a collection or array"></a>Sort a collection or array</h2><p>Collection: Collections.(Arrays.asList(myArray), new MyComparator());</p>
<p>Array: Arrays.sort();</p>
<h2 id="Java-remove-all-whitespaces-in-String"><a href="#Java-remove-all-whitespaces-in-String" class="headerlink" title="Java remove all whitespaces in String"></a>Java remove all whitespaces in String</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">replaceAll(<span class="string">"\\s"</span>,<span class="string">""</span>)</span><br></pre></td></tr></table></figure>

<p>Reference: <a href="https://stackoverflow.com/a/5455828/9045814" target="_blank" rel="noopener">https://stackoverflow.com/a/5455828/9045814</a></p>
<h2 id="Can-we-use-array-or-List-as-key-of-hashset-map"><a href="#Can-we-use-array-or-List-as-key-of-hashset-map" class="headerlink" title="Can we use array or List as key of hashset/map?"></a>Can we use array or List as key of hashset/map?</h2><p><strong>Conclusion</strong>: List? Yes, but not good; Array? NO.</p>
<p>List: <a href="https://stackoverflow.com/questions/9973596/arraylist-as-key-in-hashmap" target="_blank" rel="noopener">ArrayList as key in HashMap</a></p>
<p>Array: <a href="https://stackoverflow.com/a/7488144/9045814" target="_blank" rel="noopener">Storing arrays in Set and avoiding duplicates</a></p>
<p>Also, after I did some <a href="playground/Test1.java">experiments about primitive types and String</a> and <a href="playground/Test2.java">experiments about array</a>: </p>
<ul>
<li><p>After I put a list(with Integer as the element type) to the hashset, it will take the content of the list into consideration. However, when you change the elements of the list, the set DOESN’T change accordingly.</p>
</li>
<li><p>After I changed the element type of the list from Integer to String, the result is the same.</p>
</li>
<li><p>After I changed the element type of the list from Integer to int[], guess what? The set and list will only consider the reference to the int[] as such:<br>  [[[I@6e2c9341], [[I@46238e3f]]]</p>
</li>
<li><p>After I changed the element type of the list from Integer to int[], guess what? The set will only consider the reference to the int[].</p>
</li>
</ul>
<p>Summary:</p>
<table>
<thead>
<tr>
<th>Element Type in Set</th>
<th>When adding</th>
<th>When modifying elements only</th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>List<Integer></td>
<td>compare inner value of elements</td>
<td>set does not change accordingly</td>
<td></td>
<td></td>
</tr>
<tr>
<td>List<String></td>
<td>compare inner value of elements</td>
<td>set does not change accordingly</td>
<td></td>
<td></td>
</tr>
<tr>
<td>List&lt;int[]&gt;</td>
<td>compare references of elements</td>
<td>set does not change accordingly</td>
<td></td>
<td></td>
</tr>
<tr>
<td>int[]</td>
<td>compare references</td>
<td>set does not change accordingly</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="How-to-customize-Java-class-in-order-to-be-used-in-PriorityQueue"><a href="#How-to-customize-Java-class-in-order-to-be-used-in-PriorityQueue" class="headerlink" title="How to customize Java class in order to be used in PriorityQueue ?"></a>How to customize Java class in order to be used in <code>PriorityQueue</code> ?</h2><ol>
<li>Implements <code>Comparable&lt;T&gt;</code></li>
<li>Override the method <code>public int compareTo(T t)</code></li>
</ol>
<p><a href="https://howtodoinjava.com/java/collections/java-priorityqueue/#:~:text=Java%20PriorityQueue%20class%20is%20a,are%20according%20to%20their%20priority." target="_blank" rel="noopener">reference</a></p>
<h2 id="Java-visibility-Explanation"><a href="#Java-visibility-Explanation" class="headerlink" title="Java visibility Explanation"></a>Java visibility Explanation</h2><p><img src="res/visibility.png" alt=""></p>
<h2 id="How-to-test-if-a-double-is-an-integer"><a href="#How-to-test-if-a-double-is-an-integer" class="headerlink" title="How to test if a double is an integer?"></a>How to test if a double is an integer?</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(i % <span class="number">1</span> == <span class="number">0</span>)</span><br></pre></td></tr></table></figure>

<h2 id="Compare-two-strings"><a href="#Compare-two-strings" class="headerlink" title="Compare two strings"></a>Compare two strings</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">str1.compareTo(str2); <span class="comment">// return a integer</span></span><br></pre></td></tr></table></figure>

<h2 id="How-to-use-Java-Pair-TODO"><a href="#How-to-use-Java-Pair-TODO" class="headerlink" title="How to use Java Pair ? #TODO"></a>How to use Java <code>Pair</code> ? #TODO</h2>]]></content>
  </entry>
  <entry>
    <title>My first blog</title>
    <url>/2020/05/19/My-first-blog/</url>
    <content><![CDATA[<p>第一篇blog，就来记录下搭建时遇到的一些问题和解决方案。</p>
<p>本博客时基于hexo搭建，使用next主题。一开始hexo自带的landscape主题文件夹中，readme.md的第77行会导致GitHub page无法成功build，建议直接删掉哪一行。</p>
<p>本人follow知乎用户@吴润的<a href="https://zhuanlan.zhihu.com/p/26625249" target="_blank" rel="noopener">hexo搭建指南</a>。非常感谢这位大佬的分享。他的文章中提到了插件hexo-deployer-git的使用。本人测试发现用了这个插件后，完全不需要自己管理博客的版本，hexo -d会自动部署。</p>
<p>还发现了一个问题是，我将next的_config.yml中的darkmode选项改为true，在本地测试时成功进入暗色模式，但是在远端并未成功。原因尚且不知，推测是github page的渲染问题。</p>
<p>未完待续…</p>
]]></content>
      <categories>
        <category>中文</category>
      </categories>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Oct 1st check-in</title>
    <url>/2020/10/01/Oct-1st-check-in/</url>
    <content><![CDATA[<p><a href="https://leetcode.com/problems/sliding-window-maximum/" target="_blank" rel="noopener">239. Sliding Window Maximum</a></p>
<p><a href="https://www.geeksforgeeks.org/arraydeque-in-java/" target="_blank" rel="noopener">ArrayDeque</a></p>
<p><a href="https://leetcode.com/problems/consecutive-numbers-sum/" target="_blank" rel="noopener">829. Consecutive Numbers Sum</a></p>
<p><a href="https://www.geeksforgeeks.org/prefix-postfix-conversion/" target="_blank" rel="noopener">Prefix to Postfix Conversion</a></p>
]]></content>
      <categories>
        <category>English</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo asset设置: hexo-rendered-marked</title>
    <url>/2020/10/05/hexo-asset%E8%AE%BE%E7%BD%AE-hexo-rendered-marked/</url>
    <content><![CDATA[<p>本人hexo版本：4.2.1</p>
<p>对Hexo asset进行配置，网上很多比较老的教程使用<code>hexo-asset-image</code>插件进行配置。</p>
<p>我一开始也是使用该插件，但是不知是何玄学原因it just doesn’t work. 最后无奈只能老老实实网上查询解决办法。</p>
<p>在目前最新的Hexo官方文档的<a href="https://hexo.io/docs/asset-folders.html#Embedding-an-image-using-markdown" target="_blank" rel="noopener">Assert Folder</a>中，使用了<code>hexo-rendered-marked</code>插件。正是该插件解决了我的问题。使用方法请进入文档自行研究。</p>
<p>注意：如果你同时也有<code>hexo-asset-image</code>插件，请先卸载该插件否则会使<code>hexo-rendered-marked</code>无法正常作用：</p>
<pre><code>npm uninstall hexo-asset-image</code></pre>]]></content>
      <categories>
        <category>中文</category>
      </categories>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>六月末夜谈</title>
    <url>/2020/06/29/%E5%85%AD%E6%9C%88%E6%9C%AB%E5%A4%9C%E8%B0%88/</url>
    <content><![CDATA[<p>今日做了leetcode的Reconstruct Itinerary，自认为对于backtrack+递归套件的使用已渐渐熟练。</p>
<p>使用linkedlist时要注意，pop和poll方法都是removefirst的。换言之，如果你不用stack而是用linkedlist来模拟stack的pop功能的话，别用pop，用removeLast。</p>
<p>从时间上看已经是6月29日，六月之末，新的一周的开始。</p>
<p>重新打开了苏东坡传。这段时间颇为思考了一些关于偏见和认知的问题。也许真理，只有能横跨时间，空间和种群的高维生物才能分辨，而我们人类只能尽量地接近最优解。</p>
<p>即便如此，人还要有信仰。绝对的对错也许无法分清，但是相对的对错，优劣，利弊是可以分清的。利益，立场是可以划分的。只求不愧于心这话很有道理，我们无法改变别人，也无法发现纯粹的对错，但是我们可以不背叛自己，追求自己所认为更正确的东西。</p>
<p>我认为是时候坚定这样的想法了。坚定不同于固执，当我听到或者观察到更有建设性，更有智慧的观点时，我会尝试吸纳和接受。</p>
<p>还是想的太多，做的不够多，读的太少。</p>
<p>千里之行，始于足下。有则改之，无则加勉。</p>
<p>加油。</p>
]]></content>
      <categories>
        <category>中文</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>return to blog</title>
    <url>/2020/09/03/return-to-blog/</url>
    <content><![CDATA[<p>Now is Sep 3, 23:13.</p>
<p>It has been 66 days since my last post on June 29th. Lots of things happen during such “evil” time range:</p>
<ul>
<li>Completed my first internship/job in my life.</li>
<li>Finished a 4 credit hours online class.</li>
<li>Moved out from AZ</li>
<li>Had my last meal in AZ with a receipt ID “66” 😈😈😈.</li>
<li>Move to Seattle</li>
<li>Get all daily life things done.</li>
<li>…</li>
</ul>
<p>Now, I finally get the chance to stay in peace and think about the next step. I am gonna to be a professional software engineer, and I shall continue leetcoding and doing project today.</p>
<p>That’s all, THE LORD HAS RETURNED!</p>
]]></content>
      <categories>
        <category>English</category>
      </categories>
  </entry>
  <entry>
    <title>十月初夜谈</title>
    <url>/2020/10/01/%E5%8D%81%E6%9C%88%E5%88%9D%E5%A4%9C%E8%B0%88/</url>
    <content><![CDATA[<p>总结刚刚过去的九月：</p>
<ul>
<li>刷题量上100+，参加三次leetcode contest</li>
<li>适应在西雅图的新生活，适应新学校。</li>
<li>作出下一步的职业规划</li>
</ul>
<p>多说无益，既有决心，便请前行。</p>
<p>晚安。</p>
]]></content>
      <categories>
        <category>中文</category>
      </categories>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>AWS学习笔记：High Availability</title>
    <url>/2020/11/01/AWS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%9AHigh-Availability/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="693f54decd4b50d7889efa591e640f0cdcee87fdc41140a0134dce8e8d73c5ec"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>中文, English</category>
      </categories>
      <tags>
        <tag>AWS</tag>
        <tag>Network</tag>
      </tags>
  </entry>
  <entry>
    <title>Interview Preparation</title>
    <url>/2020/11/02/Interview-Preparation/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="cfe13e5efadcc733ad2711ca1caff8efd1c4a5062dcf150081979a1a040f3ea0"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>中文, English</category>
      </categories>
      <tags>
        <tag>Network</tag>
        <tag>Java</tag>
        <tag>OS</tag>
      </tags>
  </entry>
  <entry>
    <title>Learning Roadmap</title>
    <url>/2020/11/03/Learning-Roadmap/</url>
    <content><![CDATA[<h1 id="Backend-Development"><a href="#Backend-Development" class="headerlink" title="Backend Development"></a>Backend Development</h1><a id="more"></a>

<p><a href="https://www.zhihu.com/question/382675676/answer/1453151532" target="_blank" rel="noopener">应届生-&gt;后端开发工程师 from 知乎</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/103798636" target="_blank" rel="noopener">互联网大厂的后端技术栈</a></p>
<h2 id="Java-Web"><a href="#Java-Web" class="headerlink" title="Java Web"></a>Java Web</h2><p><a href="https://www.youtube.com/playlist?list=PLjjwfqIOpH-iy7l05VaJw8zOCYAevt7A2" target="_blank" rel="noopener">SSM项目实战</a></p>
<p><a href="https://www.youtube.com/watch?v=8e1v8QlHNyQ&list=PLmOn9nNkQxJF-fc4G_qDR7OWgBEOV9MIR" target="_blank" rel="noopener">Spring教程</a></p>
<p><a href="https://github.com/search?o=desc&q=SSM&s=stars&type=Repositories" target="_blank" rel="noopener">SSM: Github Search Page</a></p>
<p><a href="https://juejin.im/post/6844904065453785095#heading-48" target="_blank" rel="noopener">掘金: Java Spring入门</a></p>
<h2 id="Database"><a href="#Database" class="headerlink" title="Database"></a>Database</h2><p><a href="https://www.youtube.com/playlist?list=PLmOn9nNkQxJEi-V3CqOaOyTruYhTViQDc" target="_blank" rel="noopener">Redis原理到实战</a></p>
<h2 id="算法题"><a href="#算法题" class="headerlink" title="算法题"></a>算法题</h2><p><a href="https://leetcode-cn.top/#/home" target="_blank" rel="noopener">大厂Top算法题</a></p>
<p><a href="https://leetcode-cn.com/problemset/lcof/" target="_blank" rel="noopener">剑指offer</a></p>
<p><a href="https://leetcode-cn.com/problemset/concurrency/" target="_blank" rel="noopener">多线程</a></p>
]]></content>
      <categories>
        <category>中文</category>
      </categories>
      <tags>
        <tag>Roadmap</tag>
      </tags>
  </entry>
  <entry>
    <title>AWS学习笔记: How to design an environment</title>
    <url>/2020/10/28/AWS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-How-to-design-an-environment/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="f854849e356b9e9e569b3d2ef2e0c70d60b14377c9eca91ff8c9923e698d12bf"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>中文, English</category>
      </categories>
      <tags>
        <tag>AWS</tag>
        <tag>Network</tag>
      </tags>
  </entry>
</search>
